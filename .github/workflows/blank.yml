# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
      - '**'
  schedule:
    - cron: "0 12 * * MON"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  ARTIFACT_PATH: ${{ github.workspace }}/artifacts
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - uses: actions/setup-python@v5
      - run: mkdir -p ${{ env.ARTIFACT_PATH }}

      - id: getGames
        name: Get games
        uses: robinraju/release-downloader@v1
        with:
          repository: "chinese-liliths-throne/liliths-throne-chinese-localization"
          latest: true
          preRelease: true
          fileName: liliths-throne*.zip
          
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Store tag
        run: |
          echo "RELEASE_TAG=${{ steps.get-latest-tag.outputs.tag }}" >> "$GITHUB_ENV"

      - name: Bump version
        shell: python
        run: |
          import os
          release_tag = os.getenv('RELEASE_TAG')
          splited = release_tag.split('.')
          splited[-2] = str(int(splited[-2]) + 1)
          result = '.'join(splited)

          env_file = os.getenv('GITHUB_ENV')

          with open(env_file, "a") as myfile:
            myfile.write(f"RELEASE_TAG={result}")
        # if: ${{ github.event_name == 'schedule' }}

      - run: touch ${{ env.RELEASE_TAG }}

      - run: |
          for file in ${{ github.workspace }}/*.zip; do
            zip -r ${file} ${{ env.RELEASE_TAG }}
            mv ${file} ${{ env.ARTIFACT_PATH }}
          done
      - name: Create release.md
        run: |
          touch release.md

      - name: Automatic Releases
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.RELEASE_TAG }}
          name: "${{ env.RELEASE_TAG }}"
          allowUpdates: true
          bodyFile: release.md
          artifacts: |
            ${{ env.ARTIFACT_PATH }}/*.zip
